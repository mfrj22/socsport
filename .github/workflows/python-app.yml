name: Python application


on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: socsport

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install pytest-cov
          pip install flask
          pip install flask-SQLAlchemy
          pip install pymysql
          pip install cryptography
          pip install geopy
          pip install flask-cors
          pip install coverage
          pip install python_dotenv
          pip install ollama
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download and install Ollama
        run: |
          sudo systemctl stop systemd-timesyncd
          sudo date -s '-2 hours'
          curl -fsSL https://ollama.com/install.sh | sh
          
      - name: Run ollama mistral
        run: ollama run mistral
        env:
          CURL_OPTS: -k

          
      - name: Install Code Climate Test Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter

      - name: Upload coverage data to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          coverage run -m pytest
          coverage xml -o coverage.xml
          ./cc-test-reporter before-build
          ./cc-test-reporter after-build --exit-code $? -t coverage.py

      - name: Install Ruby and Asciidoctor dependencies
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0

      - name: Install Asciidoctor gems
        run: |
          gem install asciidoctor-pdf
          gem install rouge

      - name: Generate PDF from Asciidoctor
        run: |
          asciidoctor-pdf -D assets src/docs/asciidoc/main.adoc
